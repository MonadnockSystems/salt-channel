<?xml version="1.0" encoding="UTF-8" ?>
<!-- 
Build file to build jar file and javadoc. 
NOTE: compile with Java 7!
Do not use Java (mainly due to Android).
-->

<project name="salt-channel" default="build" basedir=".">

<target name="init" description="Initializess properties">
    <tstamp>
        <format property="date" pattern="yyyyMMdd" />
    </tstamp>

    <tstamp>
        <format property="dateAndMinute" pattern="yyyyMMdd.HHmm" />
    </tstamp>

    <property name="version" value="${date}"/>
    <property name="time" value="${dateAndMinute}"/>

    <!-- BuildInfo.java is generated from its template. -->
    <copy file="src/saltchannel/dev/BuildInfoTemplate.txt" 
            toFile="src/saltchannel/dev/BuildInfo.java"
            overwrite="true">
        <filterset begintoken="{{" endtoken="}}">
            <filter token="version" value="${version}"/>
            <filter token="time" value="${time}"/>
        </filterset>
    </copy>

    <echo>version: ${version}, time: ${time}</echo>
</target>
    
<target name="compile" depends="init"
    description="compiles files, copies resources, output to out/classes">
    
    <mkdir dir="out/classes"/>
    
    <path id="classpath">
        <fileset dir="lib">
            <include name="**/*.jar" />
        </fileset>
       
    </path>

    <javac destdir="out/classes" source="1.7" target="1.7">
        <src path="src"/>
        <src path="src-in"/>
        <classpath refid="classpath" />
    </javac>
    
    <copy todir="out/classes">
        <fileset dir="src">
            <exclude name="**/*.java"/>
            <exclude name="**/package.html"/>
        </fileset>
    </copy>
</target>
    
<target name="clean" description="">
    <delete includeemptydirs="true" quiet="true">
        <fileset dir="out" includes="**/*"/>
    </delete>
</target>

<target name="jar" description="creates jar file, includes libs in it" depends="compile">
	<delete file="out/salt-channel-${version}.jar"/>	
	<jar destfile="out/salt-channel-${version}.jar">
	    <fileset dir="out/classes"/>    <!-- This should be first to allow replacing classes in libs. -->
	    <zipgroupfileset dir="lib" includes="*.jar" />
            <fileset dir=".">
              <include name="**/lib/**"/>
           </fileset>
	</jar>
    
    <copy file="out/salt-channel-${version}.jar" 
            toFile="out/salt-channel.jar"
            overwrite="true">
    </copy>
</target>

<target name="javadoc" description="Creates javadoc.">
    <mkdir dir="out/javadoc"/>
    <javadoc destdir="out/javadoc"
            doctitle="Salt Channel"
            windowtitle="Salt Channel API"
            encoding="utf-8"
	        classpath="lib/*:out">
        <arg line="-Xmaxwarns 1"/><!-- Removes all but one warning. Using "0" did not work. -->
        
        <packageset dir="src" defaultexcludes="yes">
            <include name="**"/>
        </packageset>
        
        <packageset dir="src-in" defaultexcludes="yes">
            <include name="**"/>
        </packageset>
    </javadoc>
</target>

<target name="compileTest"  depends="compile" description="compiles files, copies resources, output to out/classes">

    <mkdir dir="out/classes-test"/>

    <path id="classpath-test">
        <fileset dir="lib-dev">
            <include name="**/*.jar" />
        </fileset>
        <pathelement path="out/classes"/>
        <pathelement path="out/classes-test"/>
    </path>

    <javac srcdir="src-test" destdir="out/classes-test" source="1.7" target="1.7">
        <classpath refid="classpath-test" />
    </javac>

    <copy todir="out/classes-test">
        <fileset dir="src-test">
            <exclude name="**/*.java"/>
            <exclude name="**/package.html"/>
        </fileset>
    </copy>
</target>


<target name="test" depends="compileTest">
  <junit fork="yes" printsummary="on" haltonerror="on" haltonfailure="on" showoutput="true">
    <classpath>
      <pathelement location="lib-dev/junit-4.12.jar"/>
      <pathelement location="lib-dev/hamcrest-core-1.3.jar"/>
      <pathelement location="out/classes" />    
      <pathelement location="out/classes-test" />
    </classpath>    
    <batchtest>
       <fileset dir="out/classes-test">
            <include name="**/*Test.class" />
       </fileset>
    </batchtest>
    <formatter type="plain" usefile="false"/>
  </junit>
</target>   

<target name="build" depends="clean, compile, jar, javadoc" description="cleans, compiles and builds jar, javadoc">
</target>

</project>
